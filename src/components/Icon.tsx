import clsx from "clsx";

interface IIconProps {
  className?: string;
  color?: string;
}

const Icon = {
  Copyright: ({ className }: IIconProps) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      className={className}
      viewBox="0 0 24 24"
      strokeWidth="2"
      stroke="currentColor"
      fill="none"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
      <circle cx="12" cy="12" r="9"></circle>
      <path d="M14 9.75a3.016 3.016 0 0 0 -4.163 .173a2.993 2.993 0 0 0 0 4.154a3.016 3.016 0 0 0 4.163 .173"></path>
    </svg>
  ),
  ArrowSnake: ({ className }: IIconProps) => (
    <svg className={className} viewBox="0 0 84 172" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M39.5076 19.009C36.0881 22.7048 33.1726 26.8282 30.8353 31.2739C29.2856 34.0856 27.6936 37.2732 26.105 40.7186C24.3839 44.3978 22.9226 48.1907 21.7318 52.0701C21.0983 54.161 20.6044 56.2908 20.2533 58.4458C19.8617 60.6787 19.6738 62.9419 19.6919 65.208C19.6834 67.5302 19.9528 69.8452 20.4943 72.1045C21.0085 74.3945 21.8348 76.6045 22.9506 78.6739L23.1446 79.0114C23.2381 78.9163 23.3194 78.798 23.4127 78.6912C26.9598 74.6751 31.7278 71.9076 36.9993 70.8051C39.679 70.2745 42.4396 70.2895 45.113 70.8492C47.9136 71.4336 50.5161 72.7191 52.6717 74.583C53.8385 75.5316 54.845 76.6582 55.6535 77.9205C56.57 79.3286 57.1503 80.925 57.3501 82.5886C57.5031 84.2086 57.309 85.8425 56.7805 87.3833C56.252 88.9242 55.401 90.3373 54.2831 91.5303C52.2569 93.6906 49.5304 95.0797 46.5776 95.4562C43.8756 95.8164 41.1285 95.6459 38.4934 94.9544C35.8963 94.2966 33.4174 93.2459 31.1442 91.8393C28.3112 90.0775 25.8023 87.8506 23.7251 85.2541C23.3574 85.9088 23.0341 86.5869 22.7573 87.284C21.094 91.3853 20.372 95.8011 20.6435 100.212C20.8685 104.326 21.7212 108.384 23.1725 112.245C24.4223 115.624 26.0839 118.839 28.1204 121.819C29.91 124.311 31.923 126.64 34.135 128.774C37.5606 132.15 41.3498 135.143 45.4345 137.7C48.1606 139.437 51.0158 140.967 53.9757 142.277C56.3583 143.312 58.1201 143.98 59.5004 144.466C60.6907 144.908 61.4877 145.167 62.0947 145.393L61.5277 144.615C59.9111 142.397 58.4865 140.364 57.3262 138.62C55.0176 135.133 53.6956 132.805 54.0943 132.507C54.4931 132.208 56.3401 133.943 59.1053 137.025C60.4997 138.566 62.0998 140.433 63.8452 142.544L64.5073 143.344C64.796 143.685 65.0545 144.051 65.2799 144.436C65.4204 144.686 65.5388 144.947 65.6337 145.217C65.7551 145.56 65.8277 145.918 65.8493 146.281C65.8937 147.029 65.6962 147.771 65.2853 148.4C64.7117 149.168 63.9972 149.822 63.179 150.328L61.3846 151.653C51.2943 158.824 42.7055 164.017 42.209 163.202C41.7126 162.388 49.4788 155.905 59.5689 148.722L60.9067 147.79C60.2149 147.715 59.5288 147.595 58.8529 147.43C56.8278 146.981 54.8402 146.38 52.9071 145.633C49.7123 144.436 46.6357 142.95 43.7163 141.194C39.3245 138.603 35.2562 135.508 31.5956 131.975C29.1773 129.659 26.9826 127.124 25.0399 124.404C22.7705 121.124 20.9247 117.576 19.5458 113.841C17.9268 109.538 16.9838 105.015 16.7497 100.428C16.4531 95.3246 17.316 90.2198 19.275 85.4894C19.8337 84.1241 20.5306 82.8182 21.355 81.5918C21.0884 81.138 20.8218 80.6842 20.5905 80.2182C19.3737 77.881 18.4801 75.3922 17.9337 72.8188C17.394 70.3257 17.1494 67.7788 17.2049 65.2295C17.2349 62.7967 17.4881 60.3715 17.9612 57.9839C18.372 55.7415 18.932 53.5285 19.6378 51.3592C20.9372 47.4123 22.5289 43.5655 24.3998 39.8502C26.1144 36.3796 27.8135 33.2297 29.4971 30.4006C32.0395 25.959 35.2304 21.9134 38.9664 18.3947C39.9703 17.4755 41.0441 16.6339 42.1781 15.8775C42.9651 15.3861 43.3529 15.1582 43.4248 15.2158C43.4966 15.2735 41.9377 16.5022 39.5079 19.0325L39.5076 19.009ZM26.3178 81.6076C26.0493 81.9043 25.8049 82.2242 25.5604 82.5441C27.5427 85.0783 29.9805 87.2283 32.7512 88.8861C34.7775 90.092 36.9781 90.9841 39.2769 91.5314C41.5276 92.0892 43.8676 92.2014 46.1626 91.8616C48.3452 91.5503 50.35 90.495 51.8316 88.8776C52.5688 88.0918 53.1305 87.1612 53.4803 86.1462C53.83 85.1313 53.9599 84.0549 53.8614 82.987C53.4489 80.8557 52.2498 78.9529 50.4978 77.6493C48.7694 76.1928 46.6929 75.1991 44.4663 74.7629C42.2529 74.3468 39.9772 74.3772 37.7757 74.8523C35.5622 75.3164 33.4405 76.1371 31.4952 77.2816C29.5368 78.4167 27.7863 79.8714 26.3175 81.5841" />
    </svg>
  ),
  Mail: ({ className }: IIconProps) => (
    <svg
      xmlns="http://www.w3.org/2000/svg"
      className={className}
      viewBox="0 0 24 24"
      strokeWidth="2"
      stroke="currentColor"
      fill="none"
      strokeLinecap="round"
      strokeLinejoin="round">
      <path stroke="none" d="M0 0h24v24H0z" fill="none"></path>
      <line x1="10" y1="14" x2="21" y2="3"></line>
      <path d="M21 3l-6.5 18a0.55 .55 0 0 1 -1 0l-3.5 -7l-7 -3.5a0.55 .55 0 0 1 0 -1l18 -6.5"></path>
    </svg>
  ),
  Notification: ({ className }: IIconProps) => (
    <span className={`flex items-center justify-center h-3 w-3 absolute ${className}`}>
      <span className="animate-ping absolute inline-flex h-full w-full rounded-full bg-emerald-400 opacity-75"></span>
      <span className="relative inline-flex rounded-full h-3 w-3 bg-emerald-500"></span>
    </span>
  ),
  Loading: ({ className, color }: IIconProps) => (
    <svg
      width="129"
      height="129"
      viewBox="0 0 129 129"
      fill="none"
      className={clsx(className)}
      xmlns="http://www.w3.org/2000/svg">
      <path
        d="M92.75 15.5696C81.9787 9.35082 69.4564 6.85999 57.1251 8.48347C44.7939 10.1069 33.343 15.754 24.5483 24.5488C15.7536 33.3436 10.1067 44.7946 8.48337 57.1258C6.86005 69.4571 9.35104 81.9794 15.57 92.7506C21.789 103.522 31.3883 111.94 42.8793 116.7C54.3702 121.459 67.1106 122.294 79.1244 119.075C91.1381 115.855 101.754 108.762 109.325 98.894C116.897 89.0264 121 76.9362 121 64.4986"
        stroke={color || "#fff"}
        strokeWidth="15"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </svg>
  ),
};

export default Icon;
